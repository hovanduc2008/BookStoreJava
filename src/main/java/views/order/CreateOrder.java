/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views.order;
import controllers.book.BookController;
import models.Order;
import view.HomePage;

import javax.swing.JOptionPane;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import models.Book;
import models.OrderDetail;
import models.Supplier;

import views.order.CreateBookOrder;
/**
 *
 * @author Admin
 */
public class CreateOrder extends javax.swing.JFrame {

    /**
     * Creates new form CreateOrder
     */
    private HomePage home;
    
    public ArrayList<Book> book_list;
    
    private int dongChon = -1;
    
    private ArrayList<OrderDetail> order_detail_list;
    
    private BookController bookController;
    
    public CreateOrder(java.awt.Frame parent, boolean modal) {
        initComponents();
        
        order_detail_list = new ArrayList<>();
        this.bookController = new BookController();
        
        book_list = new ArrayList<>();
        book_list = (ArrayList<Book>) bookController.readDataFromFile("books.txt");
        
        tblModelOrderDetail = (DefaultTableModel) tblOrderBookList.getModel();
        showOrderDetailList(); 
        
        this.setLocationRelativeTo(null);
        home = (HomePage) parent;
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    }
    
    private void showOrderDetailList() {
//        order_detail_list = (ArrayList<OrderDetail>) branchController.readDataFromFile("branches.txt");
        if (order_detail_list == null) {
            order_detail_list = new ArrayList<>();
        }
        this.showData(order_detail_list, tblModelOrderDetail);
    }
    
    public <T> void showData(ArrayList<T> list, DefaultTableModel model) {
        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        model.setRowCount(0);
        for (T t : list) {
            if (t instanceof OrderDetail) {
                OrderDetail b = (OrderDetail) t;
                tblModelOrderDetail.addRow(new Object[]{
                    b.getBook(), b.getQuantity(), b.getSubtotal(), b.getSubtotal()
                });

            }
            
            
        }
    }
    
    private DefaultTableModel tblModelOrderDetail;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        txtOrderPhone = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        txtOrderCustomer = new javax.swing.JTextField();
        btnHuyBo = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblOrderBookList = new javax.swing.JTable();
        btnThem1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtOrderEmail = new javax.swing.JTextField();
        txtOrderAddress = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnThem3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setText("Điện thoại:");

        txtOrderPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOrderPhoneActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel10.setText("TẠO ĐƠN HÀNG");

        btnThem.setText("Thêm sách");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        txtOrderCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOrderCustomerActionPerformed(evt);
            }
        });

        btnHuyBo.setText("Hủy bỏ");
        btnHuyBo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyBoActionPerformed(evt);
            }
        });

        jLabel2.setText("Người đặt:");

        tblOrderBookList.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N
        tblOrderBookList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblOrderBookList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên sách", "Số lượng", "Giá bán", "Thành tiền"
            }
        ));
        tblOrderBookList.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblOrderBookList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblOrderBookListMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(tblOrderBookList);

        btnThem1.setText("Tạo");
        btnThem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThem1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Email:");

        txtOrderEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOrderEmailActionPerformed(evt);
            }
        });

        txtOrderAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOrderAddressActionPerformed(evt);
            }
        });

        jLabel5.setText("Địa chỉ:");

        btnThem3.setText("Xóa");
        btnThem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThem3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnThem3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnThem))
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnThem1)
                        .addGap(77, 77, 77)
                        .addComponent(btnHuyBo)
                        .addGap(155, 155, 155))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jLabel10))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtOrderPhone))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtOrderEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel5))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtOrderCustomer)
                                        .addComponent(txtOrderAddress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtOrderCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtOrderPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtOrderEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtOrderAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnThem3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHuyBo)
                    .addComponent(btnThem1))
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtOrderPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOrderPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOrderPhoneActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        CreateBookOrder createB = new CreateBookOrder(this, rootPaneCheckingEnabled);
        createB.setVisible(true);
    }//GEN-LAST:event_btnThemActionPerformed

    public void handleCreateOrder(OrderDetail x) {
        order_detail_list.add(x);
        this.showData(order_detail_list, tblModelOrderDetail);
    }
    
    private void txtOrderCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOrderCustomerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOrderCustomerActionPerformed

    private void btnHuyBoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyBoActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnHuyBoActionPerformed

    private void tblOrderBookListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblOrderBookListMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblOrderBookListMouseClicked

    private int getMaxId() {
        int maxId = 0;
        for (Order order : home.order_list) {
            if (order.getOrderId()> maxId) {
                maxId = order.getOrderId();
            }
        }
        return maxId;
    }
    
    private void btnThem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThem1ActionPerformed

        String name, phone, mail, address;

        name = txtOrderCustomer.getText();
        phone = txtOrderPhone.getText();
        mail = txtOrderEmail.getText();
        address = txtOrderAddress.getText();

        if (name.isEmpty() || phone.isEmpty() || mail.isEmpty() || address.isEmpty()) {
            // Hiển thị thông báo lỗi nếu có bất kỳ trường nào rỗng
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin khách hàng.");
            return;
        }

        LocalDateTime currentTime = LocalDateTime.now();

        // Định dạng thời gian hiện tại thành chuỗi
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");
        String formattedDateTime = currentTime.format(formatter);

        try {
            if(order_detail_list != null && !order_detail_list.isEmpty()) {
                Order b = new Order(getMaxId() + 1, formattedDateTime, name, phone, mail, address, 1000000);
                home.handleCreateOrder(b);

                for(OrderDetail dt : order_detail_list) {
                    try {
                        dt.setOrderID(b.getOrderId());
                        home.handleCreateOrderDetail(dt);
                    } catch (Exception e) {
                        e.printStackTrace(); // In thông tin ngoại lệ ra console (để kiểm tra)
                        // Xử lý lỗi khi xử lý chi tiết đơn hàng
                        // Bạn có thể thêm mã xử lý lỗi ở đây nếu cần
                    }
                }

                // Hiển thị thông báo thành công sau khi tạo đơn hàng thành công
                JOptionPane.showMessageDialog(null, "Đã tạo đơn hàng thành công.");
            } else {
                JOptionPane.showMessageDialog(null, "Không thể tạo đơn hàng với danh sách sách trống.");
            }
        } catch (Exception ex) {
            ex.printStackTrace(); // In thông tin ngoại lệ ra console (để kiểm tra)
            // Xử lý lỗi khi tạo đơn hàng
            // Bạn có thể thêm mã xử lý lỗi ở đây nếu cần
            JOptionPane.showMessageDialog(null, "Đã xảy ra lỗi khi tạo đơn hàng. Vui lòng thử lại hoặc liên hệ với người quản trị.");
        }
    }//GEN-LAST:event_btnThem1ActionPerformed

    private void txtOrderEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOrderEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOrderEmailActionPerformed

    private void txtOrderAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOrderAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOrderAddressActionPerformed

    private void btnThem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThem3ActionPerformed
        //        Lấy ra chỉ số dòng chọn của người dùng click vào
        dongChon = tblOrderBookList.getSelectedRow();
        /*       Nếu danh sách rỗng hoặc người dùng chưa chọn dòng  thì in ra thông báo
        còn nếu không thì show ra màn hình xác nhận xóa */
        if (dongChon == -1) {
            JOptionPane.showMessageDialog(rootPane, "Hãy chọn một dòng cần xóa!");
        } else if (order_detail_list.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Không có thông tin để xóa!");
        } else {
            int confirm = JOptionPane.showConfirmDialog(
                rootPane,
                "Bạn có chắc chắn muốn xóa?",
                "Xác nhận xóa",
                JOptionPane.YES_NO_OPTION
            );
            /*           Người dùng chọn Yes sẽ tiến hành xóa thông tin khỏi danh sách và
            show lại danh sách sau khi xóa */
            if (confirm == JOptionPane.YES_OPTION) {
                order_detail_list.remove(dongChon);
//                categoryController.writeToFile(order_detail_list, "categories.txt");
                this.showData(order_detail_list, tblModelOrderDetail);
            }
        }
    }//GEN-LAST:event_btnThem3ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateOrder(null, false).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuyBo;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThem1;
    private javax.swing.JButton btnThem3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable tblOrderBookList;
    private javax.swing.JTextField txtOrderAddress;
    private javax.swing.JTextField txtOrderCustomer;
    private javax.swing.JTextField txtOrderEmail;
    private javax.swing.JTextField txtOrderPhone;
    // End of variables declaration//GEN-END:variables
}
